openapi: 3.0.0
info:
  title: Simple Client API
  description: >-
    This is a simple RESTful API that exposes methods for interacting with a
    repository of Clients.
  contact:
    email: hobbins.chad@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
paths:
  /clients:
    get:
      summary: Retrieve a list of Clients
      description: |
        By passing in the appropriate options, you can search for
        Clients in the system
      operationId: getClients
      parameters:
        - name: status
          in: query
          description: pass an optional status value to filer response set
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: pageset
          in: query
          description: maximum number of records to return
          required: false
          style: form
          explode: true
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
      responses:
        '200':
          description: Results matching search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
                x-content-type: application/json
        '400':
          description: bad input parameter
        '501':
          description: GET /clients not implemented
      x-swagger-router-controller: clientRouter
    post:
      summary: Add a new Client
      description: Adds an Client to the system
      operationId: addClient
      requestBody:
        description: Client item to add
        x-name: Client
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Client created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: An existing Client already exists
        '501':
          description: POST /clients not implemented
      x-swagger-router-controller: clientRouter
  '/clients/{clientId}':
    get:
      summary: Retrieve a specific Client
      description: |
        Retrieve a Client in the system
      operationId: searchClient
      parameters:
        - name: clientId
          in: path
          description: pass the identifer of a Client that you are searching for.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Results matching search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
                x-content-type: application/json
        '400':
          description: bad input parameter
        '501':
          description: GET /clients/{clientId} not implemented
      x-swagger-router-controller: clientRouter
    put:
      summary: Update a Client
      description: Update an existing Client in the system
      operationId: updateClient
      parameters:
        - name: clientId
          in: path
          description: pass the ID of a Client that you are updating
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Client item to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Client updated
        '400':
          description: 'invalid input, object invalid'
        '501':
          description: PUT /clients/{clientId} not implemented
      x-swagger-router-controller: clientRouter
    delete:
      summary: Delete a Client
      description: |
        Delete a Client in the system
      operationId: deleteClient
      parameters:
        - name: clientId
          in: path
          description: pass the ID of a Client that you are requesting to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Client deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
                x-content-type: application/json
        '202':
          description: Client queued up for deletion.
        '204':
          description: Client deleted ... but no response body.
        '501':
          description: DELETE /clients/{clientId} not implemented.
      x-swagger-router-controller: clientRouter
components:
  schemas:
    Client:
      required:
        - id
        - firstName
        - lastName
        - dateOfBirth
        - status
        - gender
        - email
      type: object
      properties:
        id:
          type: string
          example: 1
        firstName:
          type: string
          example: Homer
        lastName:
          type: string
          example: Simpson
        dateOfBirth:
          type: string
          example: 1960-03-23
        status:
          type: string
          example: prospect|client|deceased
        gender:
          type: string
          example: M|F|X
        email:
            type: string
            example: homerj@isotopemail.com
